spring:
  application:
    name: catalog-service

  # ============================================
  # DATABASE (PostgreSQL)
  # ============================================
  datasource:
    url: jdbc:postgresql://localhost:5433/catalog_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        default_schema: catalog
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  # ============================================
  # KAFKA
  # ============================================
  kafka:
    bootstrap-servers: localhost:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
    consumer:
      group-id: catalog-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "*"

  # ============================================
  # REDIS
  # ============================================
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

# ============================================
# SERVER
# ============================================
server:
  port: 8081
  servlet:
    context-path: /
  error:
    include-message: always
    include-stacktrace: on_param

# ============================================
# ACTUATOR
# ============================================
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# ============================================
# SPRINGDOC (OpenAPI/Swagger)
# ============================================
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

# ============================================
# LOGGING
# ============================================
logging:
  level:
    root: INFO
    com.balconazo: DEBUG
    org.springframework.kafka: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# ============================================
# CUSTOM PROPERTIES
# ============================================
balconazo:
  catalog:
    cache:
      ttl-seconds: 3600
    kafka:
      topics:
        space-events: space.events.v1
        availability-events: availability.events.v1

